Terminator = CR;

measure = "R0";
setup = "Q0";

measure_mode {
    out $measure; in $measure;
}

setup_mode {
	out $setup; in $setup;
}

mistatch_handler {
    in "ER,%*2c,%(\$1\$2){00|01|20|21|22|88|99}";
    measure_mode;
}

setMode {
    out "%{R0|Q0}"; # {Measure Mode|Set-Up Mode}
    in "%{R0|Q0}";
    @mismatch { mistatch_handler; }
}

getMeasureModeHeadA {
	setup_mode;
    out "SR,HB,1";
    in "SR,HB,1,%d";
	measure_mode;
    @mismatch { mistatch_handler; }
}

getMeasureModeHeadB {
	setup_mode;
    out "SR,HB,2";
    in "SR,HB,2,%d";
	measure_mode;
    @mismatch { mistatch_handler; }
}

setMeasureModeHeadA {
	setup_mode;
    out "SW,HB,1,%d";
    in "SW,HB";
    measure_mode;
	#@init { getMeasureModeHeadA; }
    @mismatch { mistatch_handler; }
}

setMeasureModeHeadB {
	setup_mode;
    out "SW,HB,2,%d";
    in "SW,HB";
    measure_mode;
	#@init { getMeasureModeHeadB; }
    @mismatch { mistatch_handler; }
}

resetOutput1 {
    out "VR,1";
    in "VR";
    @mismatch { mistatch_handler; }
}

resetOutput2 {
    out "VR,2";
    in "VR";
    @mismatch { mistatch_handler; }
}

setOffsetOutput1 {
    setup_mode;
    out "SW,OF,1,%+07d";
    in "SW,OF";
    measure_mode;
    @mismatch { mistatch_handler; }
}

setOffsetOutput2 {
    setup_mode;
    out "SW,OF,2,%+07d";
    in "SW,OF";
    measure_mode;
    @mismatch { mistatch_handler; }
}

getOffsetOutput1 {
	setup_mode;
    out "SR,OF,1";
    in "SR,OF,1,%f";
	measure_mode;
    @mismatch { mistatch_handler; }
}

getOffsetOutput2 {
	setup_mode;
    out "SR,OF,2";
    in "SR,OF,2,%f";
	measure_mode;
    @mismatch { mistatch_handler; }
}

getValueOutput1 {
	wait 800;
    out "M1";
    in "M1,%f";
    @mismatch { mistatch_handler; }
}

getValueOutput2 {
	wait 800;
    out "M2";
    in "M2,%f";
    @mismatch { mistatch_handler; }
}

